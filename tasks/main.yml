---
#- include_tasks: setup-RedHat.yml

#not needed 
#- debug: msg= "{{ openshift_url.split(".")[openshift_url.split(".") | length-1] }}"

- name: Check that the {{ openshift_temp_name }} exists
  stat:
    path: "/tmp/{{ openshift_temp_name }}"
  register: stat_result
  
#- fail:
#    msg: "Whoops! file not found"
    
- debug:
    msg: "file exists"
  when: stat_result.stat.exists == True 
  
- debug:
    msg: "file not exists"
  when: stat_result.stat.exists == False 
  
- name: Download {{ openshift_url }} to {{ openshift_temp_name }}
  get_url:
    url: "{{ openshift_url }}"
    dest: "/tmp/{{ openshift_temp_name }}"
    mode: 0440
  when: stat_result.stat.exists == False
  register: file_downloaded

- name: ansible create directory for Openshift
  file:
    path: "{{ openshift_root_path }}"
    state: directory

- name: Extract openshift.tgz into destination {{ file_downloaded.dest }}
  unarchive:
    src: "{{ file_downloaded.dest }}"
    dest: "{{ openshift_root_path }}"
    extra_opts: [--strip-components=1]
  when: stat_result.stat.exists == false
  
- name: Extract openshift.tgz into destination {{ stat_result.stat.path  }}
  unarchive:
    src: "{{ stat_result.stat.path }}"
    dest: "{{ openshift_root_path }}"
    extra_opts: [--strip-components=1]
  when: stat_result.stat.exists == true
  
- name: Check opensifht version
  command: "{{openshift_root_path}}/oc version"
  register: comm_out

- debug: msg="{{ comm_out.stdout }}"
- debug: msg="{{ comm_out.stderr }}"
     
